- products = @group.all_products rescue Product.all
%h3 Выбрать
= form_tag url_for, {remote: true, method: 'get', id: 'filter', name: 'preferences'} do
  #price
    %h4 Цена
    = text_field_tag 'minPrice', params['minPrice'], {placeholder: @products_min, data: {min: @products_min, current: @min_price}}
    \-
    = text_field_tag 'maxPrice', params['maxPrice'], {placeholder: @products_max, data: {max: @products_max, current: @max_price}}
    руб.
    #price-slider

  #producer
    %h4 Производитель
    %ul
      - producers = products.uniq.select(:producer).order("producer").pluck(:producer)
      - producers.each do |producer|
        %li
          - checked = params[:producer].try(:index, producer) || (true if producers.count == 1)
          - disabled = true if producers.count == 1
          = check_box_tag 'producer[]', producer, checked, {multiple: true, id: producer.parameterize, disabled: disabled}
          = label_tag producer.parameterize, producer
  - if @group.try(:properties).try(:any?)
    - @group.properties.each do |prop|
      .filter{id: prop.title.mb_chars.parameterize('_')}
        - if vals = values_of(prop).try(:sort_by) {|e| e.title.to_i}.presence
          %h4= prop.title
          %ul
            
            - vals.each do |val|
              %li
                - checked = params[:property].try :index, val.id.to_s || (true if vals.count == 1)
                - disabled = true if vals.count == 1
                = check_box_tag "property[]", val.id, checked, {multiple: true, disabled: disabled, id: 'val_'+val.id.to_s}
                = label_tag 'val_'+val.id.to_s, val.title
  %input{type: "reset", value: "Сброс" }/ 